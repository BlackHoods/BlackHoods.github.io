<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on BlackHoods Site</title>
    <link>http://BlackHoods.github.io/post/</link>
    <description>Recent content in Posts on BlackHoods Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Sep 2017 18:56:18 +0200</lastBuildDate>
    
	<atom:link href="http://BlackHoods.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Garage door RF communication</title>
      <link>http://BlackHoods.github.io/post/garage_door/rfcommunication/</link>
      <pubDate>Fri, 01 Sep 2017 18:56:18 +0200</pubDate>
      
      <guid>http://BlackHoods.github.io/post/garage_door/rfcommunication/</guid>
      <description>Abstract This the first of a serie of post where we are going to revese engineered a garage radio control to undertand how it works. In this first post we will describe how we have proceed in order to revese engineered the signal, present our first conclusions about our findings and which are going to be our next steps to hack the device.
This summer I wanted to introduce my self into the security RF world and what better way than take the first RF device that we have in our home and take a look how it works.</description>
    </item>
    
    <item>
      <title>TamuCTF 2017 - Pwn 4</title>
      <link>http://BlackHoods.github.io/post/tamuctf2017/pwn4/</link>
      <pubDate>Fri, 11 Aug 2017 18:56:18 +0200</pubDate>
      
      <guid>http://BlackHoods.github.io/post/tamuctf2017/pwn4/</guid>
      <description>Is curious that this specific challenge had more value than the previous one (pwn3).
As we will see below, it was way easier. Lets take a look with r2.
$ wget -q https://github.com/BlackHoods/BlackHoods.github.io/raw/master/assets/TamuCTF2017/pwn4/pwn4 $ r2 -A -c &amp;#39;afl&amp;#39; pwn4  [x] Analyze all flags starting with sym. and entry0 (aa) [x] Analyze len bytes of instructions for references (aar) [x] Analyze function calls (aac) [x] Use -AA or aaaa to perform additional experimental analysis.</description>
    </item>
    
    <item>
      <title>TamuCTF 2017 - Pwn 3</title>
      <link>http://BlackHoods.github.io/post/tamuctf2017/pwn3/</link>
      <pubDate>Thu, 10 Aug 2017 18:56:18 +0200</pubDate>
      
      <guid>http://BlackHoods.github.io/post/tamuctf2017/pwn3/</guid>
      <description>And here we are, with another pwning challenge üòÅ.
$ wget -q https://github.com/BlackHoods/BlackHoods.github.io/tree/master/assets/TamuCTF2017/pwn3 $ r2 pwn3  Once downloaded and opened with radare2, go for it and list its functions.
[0x080484b0]&amp;gt; aaa [x] Analyze all flags starting with sym. and entry0 (aa) [x] Analyze len bytes of instructions for references (aar) [x] Analyze function calls (aac) [x] Use -AA or aaaa to perform additional experimental analysis. [x] Constructing a function name for fcn.</description>
    </item>
    
    <item>
      <title>TamuCTF 2017 - Pwn 2</title>
      <link>http://BlackHoods.github.io/post/tamuctf2017/pwn2/</link>
      <pubDate>Wed, 09 Aug 2017 18:56:18 +0200</pubDate>
      
      <guid>http://BlackHoods.github.io/post/tamuctf2017/pwn2/</guid>
      <description>We are given a source code file and a binary which is being run remotely. Let&amp;rsquo;s a analyze it with radare2:
$ wget https://github.com/BlackHoods/BlackHoods.github.io/raw/master/assets/TamuCTF2017/pwn2/pwn2 $ r2 pwn2  [0x08048450]&amp;gt; aaa [x] Analyze all flags starting with sym. and entry0 (aa) [x] Analyze len bytes of instructions for references (aar) [x] Analyze function calls (aac) [x] Use -AA or aaaa to perform additional experimental analysis. [x] Constructing a function name for fcn.</description>
    </item>
    
    <item>
      <title>TamuCTF 2017 - Pwn 1</title>
      <link>http://BlackHoods.github.io/post/tamuctf2017/pwn1/</link>
      <pubDate>Tue, 08 Aug 2017 18:56:18 +0200</pubDate>
      
      <guid>http://BlackHoods.github.io/post/tamuctf2017/pwn1/</guid>
      <description>We are told that there is a binary running remotely and its code is available to download. Lets download and open it with r2.
$ wget https://ctf.tamu.edu/files/7e968d03d9caa11a2f4f2909bd3cabc9/pwn1 $ r2 -A pwn1   At some point the link will be broken, if so you can use the one from the repository.
 Now that the binary is opened, lets see some stuff inside it.
[0x08048450]&amp;gt; afl 0x08048390 3 35  sym.</description>
    </item>
    
  </channel>
</rss>