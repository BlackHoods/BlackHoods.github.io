<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pwnation Site</title>
    <link>http://Pwnation.github.io/</link>
    <description>Recent content on Pwnation Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 30 Aug 2017 18:56:18 +0200</lastBuildDate>
    
	<atom:link href="http://Pwnation.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GoogleCTF 2017 - Inst Prof (Part 1)</title>
      <link>http://Pwnation.github.io/post/googlectf2017/inst_prof_p1/</link>
      <pubDate>Wed, 30 Aug 2017 18:56:18 +0200</pubDate>
      
      <guid>http://Pwnation.github.io/post/googlectf2017/inst_prof_p1/</guid>
      <description>In this challenge we are given a binary that is running remotely at inst-prof.ctfcompetition.com:1337.
Probably the flag will be somewhere in the server.
We can start getting some basic information of the binary using the unix command file.
$ file inst_prof inst_prof: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.24, BuildID[sha1]=61e50b540c3c8e7bcef3cb73f3ad2a10c2589089, not stripped  Interesting! It is an ELF, a binary for unix systems and it has been compiled for a 64 bits architecture.</description>
    </item>
    
    <item>
      <title>Garage door RF communication</title>
      <link>http://Pwnation.github.io/post/garage_door/rfcommunication/</link>
      <pubDate>Sun, 20 Aug 2017 18:56:18 +0200</pubDate>
      
      <guid>http://Pwnation.github.io/post/garage_door/rfcommunication/</guid>
      <description>Key words  Radio frequency(RF) Software Difine Radio (SDR) Universal Hacker Radio (UHR)  Abstract This in the first one of a serie of posts where we are going to revese engineered a garage radio control to undertand how it works. In this first post We will describe how we have proceed in order to revese engineered the RF signal, present our conclusions about our findings and indicate which are going to be our next steps to hack the device.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://Pwnation.github.io/about/tzaoh/</link>
      <pubDate>Sat, 12 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>http://Pwnation.github.io/about/tzaoh/</guid>
      <description>About me Hey there, my name is Diego. I am a simple guy who is currently working as security analyst in Ireland. I use to play CTFs so the idea to create a simple blog to post some of their solutions came soon to my mind.
Inside computing security I am mainly, but not uniquely, interested in:
 Reverse engineering.
 Exploitation in general (binaries, web, etc).
 Device hacking.</description>
    </item>
    
    <item>
      <title>TamuCTF 2017 - Pwn 4</title>
      <link>http://Pwnation.github.io/post/tamuctf2017/pwn4/</link>
      <pubDate>Fri, 11 Aug 2017 18:56:18 +0200</pubDate>
      
      <guid>http://Pwnation.github.io/post/tamuctf2017/pwn4/</guid>
      <description>Is curious that this specific challenge had more value than the previous one (pwn3).
As we will see below, it was way easier. Lets take a look with r2.
$ wget -q https://github.com/BlackHoods/BlackHoods.github.io/raw/master/assets/TamuCTF2017/pwn4/pwn4 $ r2 -A -c &amp;#39;afl&amp;#39; pwn4  [x] Analyze all flags starting with sym. and entry0 (aa) [x] Analyze len bytes of instructions for references (aar) [x] Analyze function calls (aac) [x] Use -AA or aaaa to perform additional experimental analysis.</description>
    </item>
    
    <item>
      <title>TamuCTF 2017 - Pwn 3</title>
      <link>http://Pwnation.github.io/post/tamuctf2017/pwn3/</link>
      <pubDate>Thu, 10 Aug 2017 18:56:18 +0200</pubDate>
      
      <guid>http://Pwnation.github.io/post/tamuctf2017/pwn3/</guid>
      <description>And here we are, with another pwning challenge üòÅ.
$ wget -q https://github.com/BlackHoods/BlackHoods.github.io/tree/master/assets/TamuCTF2017/pwn3 $ r2 pwn3  Once downloaded and opened with radare2, go for it and list its functions.
[0x080484b0]&amp;gt; aaa [x] Analyze all flags starting with sym. and entry0 (aa) [x] Analyze len bytes of instructions for references (aar) [x] Analyze function calls (aac) [x] Use -AA or aaaa to perform additional experimental analysis. [x] Constructing a function name for fcn.</description>
    </item>
    
    <item>
      <title>TamuCTF 2017 - Pwn 2</title>
      <link>http://Pwnation.github.io/post/tamuctf2017/pwn2/</link>
      <pubDate>Wed, 09 Aug 2017 18:56:18 +0200</pubDate>
      
      <guid>http://Pwnation.github.io/post/tamuctf2017/pwn2/</guid>
      <description>We are given a source code file and a binary which is being run remotely. Let&amp;rsquo;s a analyze it with radare2:
$ wget https://github.com/BlackHoods/BlackHoods.github.io/raw/master/assets/TamuCTF2017/pwn2/pwn2 $ r2 pwn2  [0x08048450]&amp;gt; aaa [x] Analyze all flags starting with sym. and entry0 (aa) [x] Analyze len bytes of instructions for references (aar) [x] Analyze function calls (aac) [x] Use -AA or aaaa to perform additional experimental analysis. [x] Constructing a function name for fcn.</description>
    </item>
    
    <item>
      <title>TamuCTF 2017 - Pwn 1</title>
      <link>http://Pwnation.github.io/post/tamuctf2017/pwn1/</link>
      <pubDate>Tue, 08 Aug 2017 18:56:18 +0200</pubDate>
      
      <guid>http://Pwnation.github.io/post/tamuctf2017/pwn1/</guid>
      <description>We are told that there is a binary running remotely and its code is available to download. Lets download and open it with r2.
$ wget https://ctf.tamu.edu/files/7e968d03d9caa11a2f4f2909bd3cabc9/pwn1 $ r2 -A pwn1   At some point the link will be broken, if so you can use the one from the repository.
 Now that the binary is opened, lets see some stuff inside it.
[0x08048450]&amp;gt; afl 0x080483903 35 sym._init 0x080483d01 6 sym.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://Pwnation.github.io/about/doopel/</link>
      <pubDate>Tue, 18 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://Pwnation.github.io/about/doopel/</guid>
      <description> Education  2016-2017 - Master in cybersecurity, Charles III University of Madrid
 2014-2015 - Information technology, Lapland University of Applied Sciences
 2011-2016 - Information technology, Jaume I University
  Places I&amp;rsquo;ve worked  Malware Analyst in Panda Security
 Security Intern in IOActive
 Java developer in PaynoPain
  </description>
    </item>
    
  </channel>
</rss>